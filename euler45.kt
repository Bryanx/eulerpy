import java.math.BigInteger
import java.math.BigInteger.valueOf
import kotlin.math.sqrt

/*

Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
Pentagonal	 	Pn=n(3n−1)/2	 	1, 5, 12, 22, 35, ...
Hexagonal	 	Hn=n(2n−1)	 	1, 6, 15, 28, 45, ...
It can be verified that T285 = P165 = H143 = 40755.

Find the next triangle number that is also pentagonal and hexagonal.

 */
private val THREE = valueOf(3)
private val ONE = valueOf(1)
private val TWO = valueOf(2)

fun main() {
    val triangles = (2..100000).map(Int::toBigInteger).map { it * (it + ONE) / TWO }
    val pentagonals = (2..100000).map(Int::toBigInteger).map { it * (THREE * it - ONE) / TWO }.filter { triangles.contains(it) }
    (2..100000).map(Int::toBigInteger).map { it * (TWO * it - ONE) }.filter { pentagonals.contains(it) }
            .also(::print)
}